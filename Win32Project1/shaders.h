#pragma once
#include <GL/glew.h>

////////////////////////////////////////////////////////////////////////////

class Shader {
protected:
    GLuint  shaderID;
public:
    Shader(const char * vertex_file_path, const char * fragment_file_path);
    virtual ~Shader(void);

    void use(void) {glUseProgram(shaderID);}
};

////////////////////////////////////////////////////////////////////////////

class FixedColorShader : public Shader {
public:
    GLuint matrixID;
    GLuint colorID;

    FixedColorShader(const char * vertex_file_path, const char * fragment_file_path);
};

////////////////////////////////////////////////////////////////////////////

class TextureShader : public Shader {
public:
    GLuint matrixID;
    GLuint samplerID;

    TextureShader(const char * vertex_file_path, const char * fragment_file_path);
};

////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
